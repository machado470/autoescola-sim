datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Aluno {
  id        String   @id @default(uuid())
  nome      String
  cpf       String   @unique
  email     String   @unique
  telefone  String?
  dataNascimento DateTime? @map("data_nascimento")
  senhaHash String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  simulados Simulado[]
  aulas     Aula[]
  progresso ProgressoTeorico[]
}

model Instrutor {
  id        String   @id @default(uuid())
  nome      String
  email     String   @unique
  senhaHash String
  cnh       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  aulas     Aula[]
}

model Simulado {
  id            String   @id @default(uuid())
  alunoId       String
  aluno         Aluno    @relation(fields: [alunoId], references: [id])
  acertos       Int
  totalQuestoes Int
  data          DateTime @default(now())
}

model Aula {
  id          String     @id @default(uuid())
  alunoId     String
  instrutorId String
  data        DateTime
  status      AulaStatus
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  aluno     Aluno     @relation(fields: [alunoId], references: [id])
  instrutor Instrutor @relation(fields: [instrutorId], references: [id])
}

model ProgressoTeorico {
  id      String   @id @default(uuid())
  alunoId String
  itemId  String
  doneAt  DateTime @default(now())

  aluno Aluno @relation(fields: [alunoId], references: [id])

  @@unique([alunoId, itemId])
}

enum AulaStatus {
  AGENDADA
  CONCLUIDA
  CANCELADA
}

model School {
  id    Int     @id @default(autoincrement())
  name  String
  city  String
  phone String?
}
